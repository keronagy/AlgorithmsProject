/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package algorithms;

import java.awt.Button;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.List;
import java.awt.Point;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

public class Algorithms extends javax.swing.JFrame {

    static Algorithms algo;
    Graph graph = new Graph();
    ArrayList<Node> nodes = new ArrayList<Node>();
    Set<Point> set = new HashSet<Point>();
    int[][] matrix;
    Random position = new Random();
    int BatteryCharge = 20;
    boolean cont = false;

    int Charge = 1;

    ArrayList<Double> power = new ArrayList<Double>();

    /**
     * Creates new form Algorithms
     */
    public Algorithms() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CreateNodesBtn = new javax.swing.JButton();
        CreateNodesTxt = new javax.swing.JTextField();
        GetPathBtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        MsgTxt = new javax.swing.JTextField();
        AvgPowTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RandMsgNumTxt = new javax.swing.JTextField();
        SendRandomBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MessagesTxt = new javax.swing.JTextArea();
        jTextField3 = new javax.swing.JTextField();
        ShowMsgTxt = new javax.swing.JButton();
        ChargeBtn = new javax.swing.JButton();
        ChargeTxt = new javax.swing.JTextField();
        NodeIDTxt = new javax.swing.JTextField();
        BatValTxt = new javax.swing.JTextField();
        BattValBtn = new javax.swing.JButton();
        ChargeAllBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CreateNodesBtn.setText("Create nodes");
        CreateNodesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateNodesBtnActionPerformed(evt);
            }
        });

        CreateNodesTxt.setText("Nodes Number");
        CreateNodesTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CreateNodesTxtMouseClicked(evt);
            }
        });

        GetPathBtn.setText("Send Message");
        GetPathBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetPathBtnActionPerformed(evt);
            }
        });

        jTextField1.setText("To");
        jTextField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField1MouseClicked(evt);
            }
        });

        jTextField2.setText("From");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField2MouseClicked(evt);
            }
        });

        MsgTxt.setText("Type Message");
        MsgTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MsgTxtMouseClicked(evt);
            }
        });

        AvgPowTxt.setEnabled(false);

        jLabel1.setText("AvgPower");

        jLabel2.setText("Or Send Random Messages");

        RandMsgNumTxt.setText("Number of Messages");
        RandMsgNumTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RandMsgNumTxtMouseClicked(evt);
            }
        });
        RandMsgNumTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandMsgNumTxtActionPerformed(evt);
            }
        });

        SendRandomBtn.setText("Send");
        SendRandomBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendRandomBtnActionPerformed(evt);
            }
        });

        MessagesTxt.setEditable(false);
        MessagesTxt.setColumns(20);
        MessagesTxt.setRows(5);
        jScrollPane1.setViewportView(MessagesTxt);

        jTextField3.setText("Node Number");
        jTextField3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextField3MouseClicked(evt);
            }
        });

        ShowMsgTxt.setText("Show Messages");
        ShowMsgTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowMsgTxtActionPerformed(evt);
            }
        });

        ChargeBtn.setText("Charge Battery");
        ChargeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChargeBtnActionPerformed(evt);
            }
        });

        ChargeTxt.setText("Node ID");
        ChargeTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ChargeTxtMouseClicked(evt);
            }
        });

        NodeIDTxt.setText("Node ID");
        NodeIDTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NodeIDTxtMouseClicked(evt);
            }
        });
        NodeIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NodeIDTxtActionPerformed(evt);
            }
        });

        BatValTxt.setText("Battery Value");
        BatValTxt.setEnabled(false);

        BattValBtn.setText("Show Battery");
        BattValBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BattValBtnActionPerformed(evt);
            }
        });

        ChargeAllBtn.setText("Charge all Batteries");
        ChargeAllBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChargeAllBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CreateNodesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateNodesBtn)
                        .addGap(18, 18, 18)
                        .addComponent(MsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(GetPathBtn)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(RandMsgNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SendRandomBtn)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ChargeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NodeIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BattValBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChargeAllBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ChargeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BatValTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ShowMsgTxt)
                                .addGap(9, 9, 9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(AvgPowTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CreateNodesTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CreateNodesBtn)
                    .addComponent(GetPathBtn)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(RandMsgNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SendRandomBtn)
                    .addComponent(MsgTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(AvgPowTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChargeBtn)
                    .addComponent(ChargeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NodeIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BatValTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BattValBtn))
                .addGap(18, 18, 18)
                .addComponent(ChargeAllBtn)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShowMsgTxt))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CreateNodesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateNodesBtnActionPerformed
        // TODO add your handling code here:

        do {
            Point test = new Point();
            test.x = position.nextInt(100);
            test.y = position.nextInt(100);
            set.add(test);
        } while (set.size() < Integer.parseInt(CreateNodesTxt.getText()));
        ArrayList<Point> list = new ArrayList<Point>(set);
        for (int i = 0; i < Integer.parseInt(CreateNodesTxt.getText()); i++) {
            Node no = new Node(list.get(i));
            nodes.add(no);
            graph.addVertex(no, false);
        }

        int n = nodes.size();
        matrix = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (i == j) {
                    matrix[i][j] = -1;
                    continue;
                }
                int dest = getDistance(i, j);

                if (dest <= 20) {
                    graph.addEdge(nodes.get(i), nodes.get(j), dest);
                    matrix[i][j] = dest;
                } else {
                    matrix[i][j] = -1;
                }
            }

        }

        CreatePanel();


    }//GEN-LAST:event_CreateNodesBtnActionPerformed

    private void GetPathBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetPathBtnActionPerformed
        // TODO add your handling code here:
        //if(this.jTextField1.getText().equals("")||this.jTextField1.getText().equals(""))

        try {
            Dijkstra dijkstra = new Dijkstra(graph, jTextField2.getText());
            ArrayList<Node> Path = new ArrayList<Node>();
            Path = dijkstra.getPathTo(jTextField1.getText());
//            System.out.println(dijkstra.getPathTo(jTextField1.getText()));
//            System.out.println(nodes.indexOf(Path.get(Path.size() - 1)));
            for (int i = 0; i < Path.size() - 1; i++) {

                if (Path.get(i).battery <= 0) {
                    JOptionPane.showMessageDialog(this, "Cannot send, the battery needs to be charged, Node: " + Path.get(i).getId());
                    return;
                } else {
                    Path.get(i).battery -= Charge;
                }

            }

            Path.get(Path.size() - 1).getMessages().add("sender: " + jTextField2.getText() + " >> " + this.MsgTxt.getText());

            //System.out.println(Path.size()-1+"" + "sender: "+jTextField2.getText()+" >> " +this.MsgTxt.getText());
            //nodes.get(nodes.lastIndexOf(Path.get(Path.size()-1))).getMessages().add("sender: "+jTextField2.getText()+" >> " +this.MsgTxt.getText());
            //nodes.get(nodes.indexOf(Path.get(Path.size()-1))+1).getMessages().add("sender: "+jTextField2.getText()+" >> " +this.MsgTxt.getText());
            //System.out.println("message sent");
            //System.out.println(Path.get(Path.size()-1).getMessages().get(0));
            double dist = dijkstra.getDistanceTo(jTextField1.getText());
            double MessagePower = dist * 0.05;
            power.add(MessagePower);
            JOptionPane.showMessageDialog(this, "Message Sent Successfully");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "there is no path between them Or Wrong IDs");
        }
    }//GEN-LAST:event_GetPathBtnActionPerformed

    private void SendRandomBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendRandomBtnActionPerformed
        // TODO add your handling code here:
        ArrayList<Node> Path = new ArrayList<Node>();
        Random Rsender = new Random();
        Random Rdest = new Random();
        for (int i = 0; i < Integer.parseInt(RandMsgNumTxt.getText()); i++) {
            int sender = Rsender.nextInt(nodes.size() - 1) + 1;

            int dest = Rdest.nextInt(nodes.size() - 1) + 1;

            if (sender == dest) {
                i--;
                continue;

            }

            //System.out.println(sender + " " + dest);
            Dijkstra RandomMsg = new Dijkstra(graph, sender + "");

            Path = RandomMsg.getPathTo(dest + "");
            if (Path == null) {
                //i--;
                continue;
            }

            for (int j = 0; j < Path.size() - 1; j++) {

                if (Path.get(j).battery <= 0) {
                    cont = true;
                    break;
                } else {
                    Path.get(j).battery -= Charge;
                }
            }
            if (cont == true) {
                cont = false;
                continue;
            }
            //Path.get(Path.size()-1).getMessages().add("sender: "+sender+" >> " +this.MsgTxt.getText());
            Path.get(Path.size() - 1).getMessages().add("sender: " + sender + " >> " + this.MsgTxt.getText());

            double dist = RandomMsg.getDistanceTo(dest + "");
            double MessagePower = dist * 0.05;
            power.add(MessagePower);
            //this.AvgPowTxt.setText((power.get(sender)));
            //System.out.println(sender + "  " + dest + "  " + power.get(power.size() - 1));

        }

        double sum = 0;
        for (int i = 0; i < power.size(); i++) {
            sum += power.get(i);
        }

        double avg = sum / power.size();
        //System.out.println("sume = " + sum + "\t size = " + power.size() + "\tavg = " + avg);

        this.AvgPowTxt.setText(new DecimalFormat("##.##").format(avg));

    }//GEN-LAST:event_SendRandomBtnActionPerformed

    private void RandMsgNumTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandMsgNumTxtActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_RandMsgNumTxtActionPerformed

    private void RandMsgNumTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RandMsgNumTxtMouseClicked
        // TODO add your handling code here:
        this.RandMsgNumTxt.setText("");
    }//GEN-LAST:event_RandMsgNumTxtMouseClicked

    private void MsgTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MsgTxtMouseClicked
        // TODO add your handling code here:
        this.MsgTxt.setText("");
    }//GEN-LAST:event_MsgTxtMouseClicked

    private void jTextField3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField3MouseClicked
        // TODO add your handling code here:
        this.jTextField3.setText("");
    }//GEN-LAST:event_jTextField3MouseClicked

    private void ShowMsgTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowMsgTxtActionPerformed
        // TODO add your handling code here:
        this.MessagesTxt.setText("");
        ArrayList messages = nodes.get(Integer.parseInt(jTextField3.getText()) - 1).getMessages();
        for (int i = 0; i < messages.size(); i++) {
            this.MessagesTxt.append(messages.get(i) + "\n");
            //System.out.println(messages.get(i) + "\n");
        }
    }//GEN-LAST:event_ShowMsgTxtActionPerformed

    private void ChargeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChargeBtnActionPerformed
        // TODO add your handling code here:
        try {
            nodes.get(Integer.parseInt(this.ChargeTxt.getText()) - 1).setBattery(BatteryCharge);
            JOptionPane.showMessageDialog(this, "battery of node " + this.ChargeTxt.getText() + " Charged");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Node not Found");
        }
    }//GEN-LAST:event_ChargeBtnActionPerformed

    private void NodeIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NodeIDTxtActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_NodeIDTxtActionPerformed

    private void BattValBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BattValBtnActionPerformed
        // TODO add your handling code here:
        this.BatValTxt.setText(nodes.get(Integer.parseInt(this.NodeIDTxt.getText()) - 1).getBattery() + "");


    }//GEN-LAST:event_BattValBtnActionPerformed

    private void ChargeTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChargeTxtMouseClicked
        // TODO add your handling code here:
        this.ChargeTxt.setText("");
    }//GEN-LAST:event_ChargeTxtMouseClicked

    private void NodeIDTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NodeIDTxtMouseClicked
        // TODO add your handling code here:
        this.NodeIDTxt.setText("");
    }//GEN-LAST:event_NodeIDTxtMouseClicked

    private void ChargeAllBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChargeAllBtnActionPerformed
        // TODO add your handling code here:
        for (Node node : nodes) {
            node.setBattery(BatteryCharge);
        }
        JOptionPane.showMessageDialog(this, "All Batteries Charged");
    }//GEN-LAST:event_ChargeAllBtnActionPerformed

    private void jTextField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseClicked
        // TODO add your handling code here:
        this.jTextField2.setText("");
    }//GEN-LAST:event_jTextField2MouseClicked

    private void jTextField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField1MouseClicked
        // TODO add your handling code here:
        this.jTextField1.setText("");
    }//GEN-LAST:event_jTextField1MouseClicked

    private void CreateNodesTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CreateNodesTxtMouseClicked
        // TODO add your handling code here:
        this.CreateNodesTxt.setText("");
    }//GEN-LAST:event_CreateNodesTxtMouseClicked

    public int getDistance(int i, int j) {
        return (int) Point.distance(nodes.get(i).getPos().x, nodes.get(i).getPos().y, nodes.get(j).getPos().x, nodes.get(j).getPos().y);
    }

    public void CreatePanel() {
        NodesPanel panel = new NodesPanel(nodes, matrix, graph);
        panel.setSize(600, 600);
        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setMinimumSize(new java.awt.Dimension(200, 200));
        panel.setPreferredSize(new java.awt.Dimension(200, 200));
        panel.setLocation(50, 50);

        add(panel);
        revalidate();
        repaint();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Algorithms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Algorithms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Algorithms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Algorithms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                algo = new Algorithms();
                algo.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AvgPowTxt;
    private javax.swing.JTextField BatValTxt;
    private javax.swing.JButton BattValBtn;
    private javax.swing.JButton ChargeAllBtn;
    private javax.swing.JButton ChargeBtn;
    private javax.swing.JTextField ChargeTxt;
    private javax.swing.JButton CreateNodesBtn;
    private javax.swing.JTextField CreateNodesTxt;
    private javax.swing.JButton GetPathBtn;
    private javax.swing.JTextArea MessagesTxt;
    private javax.swing.JTextField MsgTxt;
    private javax.swing.JTextField NodeIDTxt;
    private javax.swing.JTextField RandMsgNumTxt;
    private javax.swing.JButton SendRandomBtn;
    private javax.swing.JButton ShowMsgTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
